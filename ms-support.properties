eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=${EUREKA-CLIENT-URI:http://localhost:9102/eureka/}

server.port=${SUPPORT-PORT:9005}

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${DB-URI:jdbc:postgresql://localhost:5432/cases}

spring.datasource.username=${BD-USERNAME:postgres}
spring.datasource.password=${DB-PASSWORD:password}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=postgresql
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Configuration pour le premier realm (Admin)
spring.security.oauth2.client.registration.keycloak.client-id=${CLIENT:ms-support}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.keycloak.issuer-uri=${realm:http://localhost:8080/realms/Admin}
spring.security.oauth2.resourceserver.jwt.issuer-uri=${ISSUER:http://localhost:8080/realms/Admin}

springdoc.swagger-ui.oauth.client-id=${CLIENT_ID:ms-support}
springdoc.swagger-ui.oauth.client-secret=${secret:mHXp5lbkDqPzGWktOan1JOOc9fV5gkqf}

# Configuration pour le deuxi√®me realm (Cumulus)
spring.security.oauth2.client.registration.cumulus.client-id=${CLIENT_CUMULUS:ms-support}
spring.security.oauth2.client.registration.cumulus.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.cumulus.scope=openid
spring.security.oauth2.client.provider.cumulus.issuer-uri=${realm_cumulus:http://localhost:8080/realms/Cumulus}
spring.security.oauth2.resourceserver.jwt.issuer-uri=${ISSUER_cumulus:http://localhost:8080/realms/Cumulus}

springdoc.swagger-ui.oauth.client-id=${CLIENT_ID_cumulus:ms-support}
springdoc.swagger-ui.oauth.client-secret=${secret_cumulus:ZWpIPSk27qnRrt7vMnw7jNFr4ZOGRlR4}
